<?php
/**
 * UploadPartTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Bytescale
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * @bytescale/api
 *
 * Bytescale API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@bytescale.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Bytescale\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * UploadPartTest Class Doc Comment
 *
 * @category    Class
 * @description Represents a part of a file to be uploaded as part of a multipart file upload.  Specifies the &#39;range&#39; of the file that needs uploading, together with an &#39;uploadUrl&#39; of where to PUT those bytes to.  The PUT request to the &#x60;uploadUrl&#x60; will return an etag response header, which must be provided in a subsequent CompleteUploadPart request.  See: basic file uploads, multipart file uploads.
 * @package     Bytescale
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class UploadPartTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "UploadPart"
     */
    public function testUploadPart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "range"
     */
    public function testPropertyRange()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uploadId"
     */
    public function testPropertyUploadId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uploadPartIndex"
     */
    public function testPropertyUploadPartIndex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "uploadUrl"
     */
    public function testPropertyUploadUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
